import os
import logging
from requests.exceptions import HTTPError

from aiogram import types, Dispatcher

from app.payments import create_invoice
from app.keyboards import main_menu, plans_menu

# –¢–∞—Ä–∏—Ñ—ã: callback_data -> (–Ω–∞–∑–≤–∞–Ω–∏–µ, —Å—É–º–º–∞, –¥–Ω–∏)
PLAN_MAP = {
    'plan_week': ('–ù–µ–¥–µ–ª—è', 100.0, 7),
    'plan_month': ('–ú–µ—Å—è—Ü', 300.0, 30),
    'plan_chat': ('–ß–∞—Ç', 50.0, 1),
}

# –ë–∞–∑–æ–≤—ã–π URL (–¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –ø–ª–∞—Ç–µ–∂–Ω–æ–π –∑–∞–≥–ª—É—à–∫–∏)
BASE_URL = os.getenv('BASE_URL', '')

def register_handlers(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands=['start'])
    dp.register_message_handler(show_plans, text='üí≥ –ö—É–ø–∏—Ç—å')
    dp.register_callback_query_handler(process_plan, lambda c: c.data in PLAN_MAP)
    # –¥—Ä—É–≥–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: –º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏, –±–æ–Ω—É—Å—ã, –ø–æ–º–æ—â—å‚Ä¶

async def cmd_start(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu())

async def show_plans(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω:", reply_markup=plans_menu())

async def process_plan(callback: types.CallbackQuery):
    name, amount, days = PLAN_MAP[callback.data]
    try:
        invoice = create_invoice(
            user_id=callback.from_user.id,
            amount=amount,
            plan=name,
            base_url=BASE_URL
        )
        pay_url = invoice.get("url")
    except HTTPError as e:
        if e.response.status_code == 401:
            # —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
            pay_url = f"{BASE_URL}/testpay?user_id={callback.from_user.id}&plan={name}"
        else:
            logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—á—ë—Ç–∞")
            await callback.message.answer("‚ùóÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—á—ë—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            await callback.answer()
            return

    await callback.message.answer(f"–°—á—ë—Ç –Ω–∞ {amount}‚ÇΩ:\n{pay_url}")
    await callback.answer()
